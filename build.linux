#! /bin/sh

export SYSROOT=/opt/winroot
export PKG_CONFIG=x86_64-w64-mingw32-pkg-config
export PKG_CONFIG_PATH=$SYSROOT/lib/pkgconfig
export PKG_CONFIG_LIBDIR=$SYSROOT/lib/pkgconfig

sudo apt install binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 gcc-mingw-w64-base gcc-mingw-w64-x86-64 \
	gfortran-mingw-w64-x86-64 mingw-w64-common mingw-w64-x86-64-dev gdb-mingw-w64 gdb-mingw-w64-target \
	pkg-config mingw-w64-tools autotools-dev automake autoconf m4 libtool texinfo unzip cmake zip
	
# libusb Download & Build
if [ ! -f $SYSROOT/bin/libusb-1.0.dll ]; then
	if [ ! -f libusb-1.0.23.tar.bz2 ]; then
		wget https://github.com/libusb/libusb/releases/download/v1.0.23/libusb-1.0.23.tar.bz2
	fi
	tar jxvf libusb-1.0.23.tar.bz2
	cd libusb-1.0.23
	./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT
	make -j4 && make install
	cd ..
	rm -fr libusb-1.0.23
fi

# libusb-compat Download & Build
if [ ! -f $SYSROOT/bin/libusb-0-1-4.dll ]; then
	if [ ! -f libusb-compat-0.1.7.tar.bz2 ]; then
		wget https://github.com/libusb/libusb-compat-0.1/releases/download/v0.1.7/libusb-compat-0.1.7.tar.bz2
	fi
	tar jxvf libusb-compat-0.1.7.tar.bz2
	cd libusb-compat-0.1.7
	./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT
	make -j4 && make install
	cd ..
	rm -fr libusb-compat-0.1.7
fi


# libftdi Download & Build
if [ ! -f $SYSROOT/bin/libftdi1.dll ]; then
	if [ ! -f libftdi1-1.4.tar.bz2 ]; then
		wget https://www.intra2net.com/en/developer/libftdi/download/libftdi1-1.4.tar.bz2
	fi	
	tar jxvf libftdi1-1.4.tar.bz2
	cd libftdi1-1.4
	mkdir -p build
	cd build
	cmake cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-x86_64-w64-mingw32.cmake -DCMAKE_INSTALL_PREFIX=$SYSROOT \
		-DLIBUSB_INCLUDE_DIR=$SYSROOT/include/libusb-1.0 \
		-DLIBUSB_LIBRARIES=$SYSROOT/lib/libusb-1.0.a ..
	make -j4 && make install
	cd ../..
	rm -fr libftdi1-1.4
fi	

# hidapi Download & Build
if [ ! -f $SYSROOT/bin/libhidapi-0.dll ]; then
	if [ ! -f hidapi-0.9.0.tar.gz ]; then
		wget https://github.com/libusb/hidapi/archive/hidapi-0.9.0.tar.gz
	fi
	tar zxvf hidapi-0.9.0.tar.gz
	cd hidapi-hidapi-0.9.0
	./bootstrap
	./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT
	make -j4 && make install
	cd ..
	rm -fr hidapi-hidapi-0.9.0
fi	

# jimtcl Download & Build
if [ ! -f $SYSROOT/bin/jimsh.exe ]; then
	if [ ! -f openocd-0.10.0.zip ]; then
		wget https://nchc.dl.sourceforge.net/project/openocd/openocd/0.10.0/openocd-0.10.0.zip
	fi
	unzip openocd-0.10.0.zip
	cd openocd-0.10.0/jimtcl
	./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT
	make -j4 && make install
	cd ../..
	rm -fr openocd-0.10.0
fi	

# libjaylink Download & Build
if [ ! -f $SYSROOT/bin/libjaylink-0.dll ]; then	
	if [ ! -f openocd-0.10.0.zip ]; then
		wget https://nchc.dl.sourceforge.net/project/openocd/openocd/0.10.0/openocd-0.10.0.zip
	fi
	unzip openocd-0.10.0.zip
	cd openocd-0.10.0/src/jtag/drivers/libjaylink
	./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT
	# fix __USE_MINGW_ANSI_STDIO bug
	perl -p -i -e 's/on MinGW\. \*\//on MinGW\. \*\/ #undef __USE_MINGW_ANSI_STDIO/' config.h
	make -j4 && make install
	cd ../../../../..
	rm -fr openocd-0.10.0
fi

# Build openocd
if [ ! -f $SYSROOT/bin/openocd.exe ]; then	
	SKIP_SUBMODULE=1 ./bootstrap 
	CFLAGS=-I$SYSROOT/include ./configure --host=x86_64-w64-mingw32 --prefix=$SYSROOT --disable-internal-jimtcl --disable-internal-libjaylink
	make -j4 && make install
	cd ..
fi

cdir=`pwd`
cd $SYSROOT
zip -r openocd.zip bin/lib* bin/openocd.exe share/info share/man share/openocd
cd $cdir  
